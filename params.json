{"name":"BBIT/AsyncDispatcherBundle","tagline":"","body":"AsyncDispatcherBundle\r\n=====================\r\n\r\n[![SensioLabsInsight](https://insight.sensiolabs.com/projects/ac7bf46c-aa2a-4100-bcf0-c3bad08cc713/small.png)](https://insight.sensiolabs.com/projects/ac7bf46c-aa2a-4100-bcf0-c3bad08cc713)\r\n[![knpbundles.com](http://knpbundles.com/BranchBit/AsyncDispatcherBundle/badge-short)](http://knpbundles.com/BranchBit/AsyncDispatcherBundle)\r\n\r\n\r\n[![Build Status](https://travis-ci.org/BranchBit/AsyncDispatcherBundle.svg?branch=master)](https://travis-ci.org/BranchBit/AsyncDispatcherBundle)\r\n[![Coverage Status](https://coveralls.io/repos/BranchBit/AsyncDispatcherBundle/badge.png?branch=master)](https://coveralls.io/r/BranchBit/AsyncDispatcherBundle?branch=master)\r\n\r\n[![Latest Stable Version](https://poser.pugx.org/bbit/async-dispatcher-bundle/v/stable.png)](https://packagist.org/packages/bbit/async-dispatcher-bundle)\r\n[![Total Downloads](https://poser.pugx.org/bbit/async-dispatcher-bundle/downloads.png)](https://packagist.org/packages/bbit/async-dispatcher-bundle)\r\n\r\n\r\nAsyncDispatcherBundle is a simple bundle which provides you with an async event dispatcher, which will store events untill kernel.terminate, and then fire them using the regular event dispatcher.\r\n\r\n\r\n### Step 1: Download BBITAsyncDispatcherBundle using composer\r\n\r\nAdd BBITAsyncDispatcherBundle in your composer.json: (use the latest stable, NOT dev-master)\r\n\r\n```js\r\n{\r\n    \"require\": {\r\n        \"bbit/async-dispatcher-bundle\": \"2.2.0\",\r\n    }\r\n}\r\n```\r\n\r\nNow tell composer to download the bundle by running the command:\r\n\r\n``` bash\r\n$ php composer.phar update bbit/async-dispatcher-bundle\r\n```\r\n\r\nComposer will install the bundle to your project's `vendor/BBIT` directory.\r\n\r\n### Step 2: Enable the bundle\r\n\r\nEnable the bundle in the kernel:\r\n\r\n``` php\r\n<?php\r\n// app/AppKernel.php\r\n\r\npublic function registerBundles()\r\n{\r\n    $bundles = array(\r\n        // ...\r\n        new BBIT\\AsyncDispatcherBundle\\BBITAsyncDispatcherBundle(),\r\n    );\r\n}\r\n```\r\n\r\n\r\n### Usage:\r\n\r\n``` php\r\n$dispatcher = $this->container->get('bbit_async_dispatcher.dispatcher'); // get dispatcher service\r\n$dispatcher->addAsyncEvent('name_of_the.event', new CustomEvent($entity));\r\n```\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}